{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Background.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","width","height","CardList","cats","map","user","i","substring","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","Background","clickChange","colorOneChange","colorTwoChange","colorOne","colorTwo","value","onClick","ErrorBoundry","setState","hasError","error","info","this","Component","App","useState","setCats","searchfield","setSearchfield","setColorOne","setColorTwo","useEffect","fetch","then","response","json","comments","makeBackgroundChange","css","document","querySelector","background","textContent","filteredCats","filter","cat","toLowerCase","includes","length","Date","toLocaleTimeString","event","target","display","justifyContent","letters","color3","color4","Math","floor","random","myCats","getElementById","ReactDOM","render","setInterval"],"mappings":"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","file":"static/js/main.54cd0322.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card({ name, email, id }) {\n  return (\n    <div className='tc grow bg-light-yellow br3 pa3 ma2 dib bw2 shadow-5 pointer' >\n      <img alt='cats' src={`https://robohash.org/${id}?set=set4`} width='200' height='200' />\n      <div>\n        <h3 className='gray'>{name}</h3>\n        <p className='gray underline'>{email}</p>\n      </div>\n    </div >\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({ cats }) {\n  return (\n    <div>\n      {\n        cats.map((user, i) => {\n          /*           if (true) {\n                      throw new Error('CardList is not working!!');\n                    } */\n          return (\n            <Card\n              id={cats[i].id}\n              name={cats[i].name.substring(0, 14)}\n              email={cats[i].email.substring(0, 22)}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nfunction SearchBox({ searchChange }) {\n  return (\n    <div>\n      <input\n        className='pa2 br3 ba b--yellow'\n        type='search'\n        placeholder='Find Cats'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nfunction Scroll(props) {\n  return (\n    <div style={{ overflowY: 'scroll', border: '0px solid white', height: '900px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","\nfunction Background({ clickChange, colorOneChange, colorTwoChange, colorOne, colorTwo }) {\n    return (\n        <div >\n            <input\n                className=\"color1 br3 b--white dim pointer measure-wide\"\n                type=\"color\"\n                value={colorOne}\n                onChange={colorOneChange} />\n            <input\n                className='button1 pt2 br3 ba b--white purple grow pointer'\n                type='button'\n                value=\"Random Background\"\n                onClick={clickChange} />\n            <input\n                className=\"color2 br3 b--white dim pointer\"\n                type=\"color\"\n                value={colorTwo}\n                onChange={colorTwoChange} />\n            <h3 className=\"white f6\"></h3>\n        </div>\n    )\n};\nexport default Background;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.setState = {\n            hasError: false\n        }\n    }\n\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n\n    render() {\n        if (this.setState.hasError) {\n            return <h1>Oooops. something went wrong</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport Background from '../components/Background';\nimport ErrorBoundary from '../components/ErrorBoundry';\n\n\nfunction App() {\n  const [cats, setCats] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  const [colorOne, setColorOne] = useState('#f6f948');\n  const [colorTwo, setColorTwo] = useState('#be47f5');\n  //without hook\n  /*   constructor() {\n      super()\n      this.state = {\n        cats: [],\n        searchfield: '',\n        colorOne: '#f6f948',\n        colorTwo: '#be47f5',\n      }\n    } */\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/comments')\n      .then(response => response.json())\n      .then(comments => { setCats(comments) });\n  }, [colorOne, colorTwo]) // Only re-run the effect if colors change\n  //without hook\n  /*   componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/comments')\n        .then(response => response.json())\n        .then(users => { this.setState({ cats: users }) });\n    } */\n\n  const makeBackgroundChange = () => {\n    const css = document.querySelector(\"h3\");\n    const body = document.querySelector(\"body\");\n    body.style.background = \"linear-gradient(to right top, \" + colorOne + \", \" + colorTwo + \")\";\n    css.textContent = colorOne + \" 👈🏻 ColorCode 👉🏻 \" + colorTwo;\n  }\n\n  const onColorOneChange = (event) => {\n    setColorOne(event.target.value);\n    document.querySelector(\".color2\").style.background = colorOne;\n    makeBackgroundChange();\n  }\n\n  const onColorTwoChange = (event) => {\n    setColorTwo(event.target.value);\n    document.querySelector(\".color1\").style.background = colorTwo;\n    makeBackgroundChange();\n  }\n\n  const onClickChange = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color3 = \"#\";\n    let color4 = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color3 += letters[Math.floor(Math.random() * 16)];\n      color4 += letters[Math.floor(Math.random() * 16)];\n    }\n    setColorOne(color3);\n    setColorTwo(color4);\n    document.querySelector(\".color1\").style.background = color4;\n    document.querySelector(\".color2\").style.background = color3;\n    makeBackgroundChange();\n  }\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  }\n\n  const filteredCats = cats.filter(cat =>\n    cat.name.toLowerCase().includes(searchfield.toLowerCase())\n  )\n\n  document.querySelector(\"body\").style.background = \"linear-gradient(to right, \" + colorOne + \", \" + colorTwo + \")\";\n\n  return !cats.length ?\n    <p>...</p> :\n    (\n      <div className='tc pa1'>\n        <h2 className='white f4'>{new Date().toLocaleTimeString()} </h2>\n        <h1 className='f1 white'>MY CATS</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <div className=\"br3 shadow-5 pt3\" style={{ display: 'inline-block', justifyContent: 'center' }} >\n          <Background\n            clickChange={onClickChange}\n            colorOneChange={onColorOneChange}\n            colorTwoChange={onColorTwoChange}\n            colorOne={colorOne}\n            colorTwo={colorTwo}\n          />\n        </div>\n        <Scroll>\n          <ErrorBoundary>\n            <CardList cats={filteredCats} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'tachyons';\n\nconst myCats = document.getElementById('root');\nReactDOM.render(<App />, myCats)\nsetInterval(() => {\n    ReactDOM.render(<App />, myCats);\n}, 1000);\n\n// registerServiceWorker();\n"],"sourceRoot":""}