{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Background.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","width","height","CardList","cats","map","user","i","s","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","Background","clickChange","colorSelectChange","value","onClick","App","onSearchChange","event","setState","searchfield","target","setColorSelectChange","css","document","querySelector","color1","color2","getElementById","background","textContent","setClickChange","body","letters","color3","color4","Math","floor","random","setAttribute","randomColor","state","fetch","then","response","json","users","this","filteredCats","filter","cat","toLowerCase","includes","length","Date","toLocaleTimeString","Component","ReactDOM","render","setInterval"],"mappings":"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","file":"static/js/main.ad1afb36.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card({ name, email, id }) {\n  return (\n    <div className='tc grow bg-light-yellow br3 pa3 ma2 dib bw2 shadow-5' >\n      <img alt='robots' src={`https://robohash.org/${id}?set=set4`} width='200' height='200' />\n      <div>\n        <h3>{name}</h3>\n        <p>{email}</p>\n      </div>\n    </div >\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({ cats }) {\n  return (\n    <div>\n      {\n        cats.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={cats[i].id} s\n              name={cats[i].name}\n              email={cats[i].email}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nfunction SearchBox({ searchChange }) {\n  return (\n    <div>\n      <input\n        className='pa2 br3 ba b--yellow'\n        type='search'\n        placeholder='Find Cats'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nfunction Scroll(props) {\n  return (\n    <div style={{ overflowY: 'scroll', border: '0px solid white', height: '800px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","\nfunction Background({ clickChange, colorSelectChange }) {\n    /*     let css = document.querySelector(\"h3\");\n        let color1 = document.querySelector(\".color1\");\n        let color2 = document.querySelector(\".color2\");\n        let body = document.getElementById(\"gradient\");\n        let button1 = document.querySelector(\".button1\");\n        let letters = \"0123456789ABCDEF\";\n    \n        function setGradient() {\n            body.style.background = \"linear-gradient(to right, \" + color1.value + \", \" + color2.value + \")\";\n            css.textContent = color1.value + \"<=Color-Code=>\" + color2.value;\n        }\n    \n        function randomColor() {\n            let color3 = \"#\";\n            let color4 = \"#\";\n            for (let i = 0; i < 6; i++) {\n                color3 += letters[Math.floor(Math.random() * 16)];\n                color4 += letters[Math.floor(Math.random() * 16)];\n            }\n            body.style.background = \"linear-gradient(to right, \" + color3 + \", \" + color4 + \")\";\n            color1.style.background = color4;\n            color2.style.background = color3;\n            button1.style.background = color4;\n            color1.setAttribute(\"value\", color3);\n            color2.setAttribute(\"value\", color4);\n            css.textContent = color3 + \"<=Color-Code=>\" + color4;\n        }\n        setGradient();\n        color1.addEventListener(\"input\", setGradient);\n        color2.addEventListener(\"input\", setGradient);\n        button1.addEventListener(\"click\", randomColor); */\n    return (\n        <div >\n            <input\n                className=\"color1 br3 b--white\"\n                type=\"color\"\n                onChange={colorSelectChange} />\n            <input\n                className='button1 pt1 br3 ba b--white'\n                type='button'\n                value=\"Random Background\"\n                onClick={clickChange} />\n            <input\n                className=\"color2 br3 b--white\"\n                type=\"color\"\n                onChange={colorSelectChange} />\n            <h3></h3>\n        </div>\n\n    )\n};\nexport default Background;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport Background from '../components/Background';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      cats: [],\n      searchfield: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => { this.setState({ cats: users }) });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n    //console.log(event.target.value)\n  }\n\n  setColorSelectChange = () => {\n    let css = document.querySelector(\"h3\");\n    let color1 = document.querySelector(\".color1\");\n    let color2 = document.querySelector(\".color2\");\n    let body = document.getElementById(\"root\");\n\n    function setGradient() {\n      body.style.background = \"linear-gradient(to right, \" + color1.value + \", \" + color2.value + \")\";\n      css.textContent = color1.value + \" üëàüèª ColorCode üëâüèª \" + color2.value;\n    }\n\n    setGradient();\n  }\n\n  setClickChange = () => {\n    let css = document.querySelector(\"h3\");\n    let color1 = document.querySelector(\".color1\");\n    let color2 = document.querySelector(\".color2\");\n    let body = document.getElementById(\"root\");\n    let letters = \"0123456789ABCDEF\";\n\n    function setGradient() {\n      body.style.background = \"linear-gradient(to right, \" + color1.value + \", \" + color2.value + \")\";\n      css.textContent = color1.value + \" üëàüèª ColorCode üëâüèª \" + color2.value;\n    }\n\n    function randomColor() {\n      let color3 = \"#\";\n      let color4 = \"#\";\n      for (let i = 0; i < 6; i++) {\n        color3 += letters[Math.floor(Math.random() * 16)];\n        color4 += letters[Math.floor(Math.random() * 16)];\n      }\n      body.style.background = \"linear-gradient(to right, \" + color3 + \", \" + color4 + \")\";\n      color1.style.background = color4;\n      color2.style.background = color3;\n      color1.setAttribute(\"value\", color3);\n      color2.setAttribute(\"value\", color4);\n      css.textContent = color3 + \" üëàüèª ColorCode üëâüèª \" + color4;\n    }\n    setGradient();\n    randomColor();\n  }\n\n  render() {\n    const { cats, searchfield } = this.state;\n    const filteredCats = cats.filter(cat =>\n      cat.name.toLowerCase().includes(searchfield.toLowerCase())\n    )\n    // const newColor = cats.\n    return !cats.length ?\n      <p>..</p> :\n      (\n        <div className='tc'>\n          <h2>{new Date().toLocaleTimeString()} </h2>\n          <h1 className='f1'>MY CATS</h1>\n          <Background\n            clickChange={this.setClickChange}\n            colorSelectChange={this.setColorSelectChange}\n          />\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList cats={filteredCats} />\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'))\nsetInterval(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n}, 1000);\n\n// registerServiceWorker();\n"],"sourceRoot":""}