{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Background.js","components/ErrorBoundry.js","components/CatPage.js","containers/App.js","index.js"],"names":["Card","name","email","id","navigate","useNavigate","onClick","toCatPage","className","alt","src","width","height","CardList","cats","map","cat","substring","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","Background","clickChange","colorOneChange","colorTwoChange","colorOne","colorTwo","value","ErrorBoundry","setState","hasError","error","info","this","Component","CatPage","useParams","useState","thisCat","setThisCat","catFact","setCatFact","his","setHis","randomFactNumber","Math","floor","random","gender","useEffect","fetch","then","response","json","data","newCatFact","res","sizes","direction","breed","country","origin","coat","pattern","fact","App","setCats","searchfield","setSearchfield","setColorOne","setColorTwo","comments","makeBackgroundChange","css","document","querySelector","background","textContent","filteredCats","filter","toLowerCase","includes","dateWithouthSecond","Date","toLocaleTimeString","navigator","language","hour","minute","length","event","target","display","justifyContent","letters","color3","color4","i","path","element","myCats","getElementById","ReactDOM","render","setInterval"],"mappings":"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","file":"static/js/main.eea40239.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Card({ name, email, id }) {\n  const navigate = useNavigate()\n  const toCatPage = (id) => {\n    navigate(`/My-Cats/${id}`)\n  }\n\n  return (\n    <div\n      onClick={() => { toCatPage(id) }}\n      className='tc grow bg-yellow br3 pa3 ma2 dib bw2 shadow-5 pointer'>\n      <img alt='cats' src={`https://robohash.org/${id}?set=set4`} width='200' height='200' />\n      <div>\n        <h3 className='gray'>{name}</h3>\n        <p className='gray underline'>{email}</p>\n      </div>\n    </div >\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({ cats }) {\n  return (\n    <div>\n      {\n        cats.map((cat) => {\n          return (\n            <Card\n              key={cat.id}\n              id={cat.id}\n              name={cat.name.substring(0, 14)}\n              email={cat.email.substring(0, 22)}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nfunction SearchBox({ searchChange }) {\n  return (\n    <div>\n      <input\n        className='pa2 br3 ba b--yellow'\n        type='search'\n        placeholder='Find Cats'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nfunction Scroll(props) {\n  return (\n    <div style={{ overflowY: 'scroll', border: '0px solid white', height: '900px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","\nfunction Background({ clickChange, colorOneChange, colorTwoChange, colorOne, colorTwo }) {\n    return (\n        <div >\n            <input\n                className=\"color1 br3 b--white dim pointer measure-wide\"\n                type=\"color\"\n                value={colorOne}\n                onChange={colorOneChange} />\n            <input\n                className='button1 pt2 br3 ba b--white purple grow pointer'\n                type='button'\n                value=\"Random Background\"\n                onClick={clickChange} />\n            <input\n                className=\"color2 br3 b--white dim pointer\"\n                type=\"color\"\n                value={colorTwo}\n                onChange={colorTwoChange} />\n            <h3 className=\"white f6\"></h3>\n        </div>\n    )\n};\nexport default Background;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.setState = {\n            hasError: false\n        }\n    }\n\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n\n    render() {\n        if (this.setState.hasError) {\n            return <h1>Oooops. something went wrong</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import { useState, useEffect } from 'react'\n//rafce\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Split from 'react-split';\n\nconst CatPage = ({ cats }) => {\n    const { id } = useParams()\n    const navigate = useNavigate()\n    const [thisCat, setThisCat] = useState([])\n    const [catFact, setCatFact] = useState([])\n    const [his, setHis] = useState(true)\n    const randomFactNumber = Math.floor(Math.random() * 241)\n\n    let gender = 'his'\n    his ? gender = 'his' : gender = 'her'\n\n    const changeGender = () => {\n        setHis(!his)\n    }\n\n    useEffect(() => {\n        fetch('https://catfact.ninja/breeds?limit=100')\n            .then(response => response.json())\n            .then(info => { setThisCat(info.data[id]) });\n    }, [id])\n\n    const newCatFact = () => {\n        fetch('https://catfact.ninja/facts?limit=241&max_length=140')\n            .then(res => res.json())\n            .then(info => { setCatFact(info.data[randomFactNumber]) })\n    }\n\n    useEffect(() => {\n        newCatFact()\n    }, [id])\n\n\n    return (\n        <div>\n            <Split\n                sizes={[50, 50]}\n                direction=\"horizontal\"\n                style={{ 'display': 'flex' }}\n            >\n                <div\n                    onClick={() => navigate('/My-Cats')}\n                    className='bg-green br4 pa3 mt4 mb3 ml3 mr2 shadow-5 pointer'\n                >\n                    <img alt='cats' src={`https://robohash.org/${id}?set=set4`} width='200' height='200' />\n                </div>\n\n                <div className='f7 bg-orange purple tc catInfo shadow-5 pointer'\n                    onClick={changeGender}\n                >\n                    <h1 >About {cats[id].name.substring(0, 14)}</h1>\n                    <h2>\n                        The breed of {cats[id].name.substring(0, 14)} is {thisCat.breed}, {gender} country is {thisCat.country}\n                        and and {gender} oringin is {thisCat.origin};  {gender} coat is {thisCat.coat} with pattern of {thisCat.pattern}.\n                    </h2>\n                </div>\n            </Split>\n            <div className='f7 bg-blue yellow tc catInfo grow ma5 shadow-5 pointer'\n                onClick={newCatFact}\n            >\n                <h1>Fun Fact about Cats</h1>\n                <h2>\n                    Random Cat Fact: {catFact.fact}\n                </h2>\n            </div>\n        </div>\n    )\n}\n\nexport default CatPage","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport Background from '../components/Background';\nimport ErrorBoundary from '../components/ErrorBoundry';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport CatPage from '../components/CatPage';\n\nfunction App() {\n  const [cats, setCats] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  const [colorOne, setColorOne] = useState('#f6f948');\n  const [colorTwo, setColorTwo] = useState('#be47f5');\n  //without hook\n  /*   constructor() {\n      super()\n      this.state = {\n        cats: [],\n        searchfield: '',\n        colorOne: '#f6f948',\n        colorTwo: '#be47f5',\n      }\n    } */\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/comments')\n      .then(response => response.json())\n      .then(comments => { setCats(comments) });\n  }, [colorOne, colorTwo]) // Only re-run the effect if colors change\n  //without hook\n  /*   componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/comments')\n        .then(response => response.json())\n        .then(users => { this.setState({ cats: users }) });\n    } */\n\n  const makeBackgroundChange = () => {\n    const css = document.querySelector(\"h3\");\n    const body = document.querySelector(\"body\");\n    body.style.background = \"linear-gradient(to right top, \" + colorOne + \", \" + colorTwo + \")\";\n    css.textContent = colorOne + \" 👈🏻 ColorCode 👉🏻 \" + colorTwo;\n  }\n\n  const onColorOneChange = (event) => {\n    setColorOne(event.target.value);\n    document.querySelector(\".color2\").style.background = colorOne;\n    makeBackgroundChange();\n  }\n\n  const onColorTwoChange = (event) => {\n    setColorTwo(event.target.value);\n    document.querySelector(\".color1\").style.background = colorTwo;\n    makeBackgroundChange();\n  }\n\n  const onClickChange = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color3 = \"#\";\n    let color4 = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color3 += letters[Math.floor(Math.random() * 16)];\n      color4 += letters[Math.floor(Math.random() * 16)];\n    }\n    setColorOne(color3);\n    setColorTwo(color4);\n    document.querySelector(\".color1\").style.background = color4;\n    document.querySelector(\".color2\").style.background = color3;\n    makeBackgroundChange();\n  }\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  }\n\n  const filteredCats = cats.filter(cat =>\n    cat.name.toLowerCase().includes(searchfield.toLowerCase())\n  )\n\n  document.querySelector(\"body\").style.background = \"linear-gradient(to right, \" + colorOne + \", \" + colorTwo + \")\";\n\n\n  const dateWithouthSecond = new Date().toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit' });\n\n\n  return !cats.length\n    ?\n    <p>...</p>\n    :\n    (\n      <Router>\n        <div className='tc pa1'>\n          <div style={{ \"display\": 'flex', 'justifyContent': 'center' }}>\n            <h2 className='white f4' style={{ 'position': 'absolute', 'right': '10px' }}>{dateWithouthSecond} </h2>\n            <h1 className='f1 white'>MY CATS</h1>\n          </div>\n          <SearchBox searchChange={onSearchChange} />\n          <div className=\"br3 shadow-5 pt3\" style={{ display: 'inline-block', justifyContent: 'center' }} >\n            <Background\n              clickChange={onClickChange}\n              colorOneChange={onColorOneChange}\n              colorTwoChange={onColorTwoChange}\n              colorOne={colorOne}\n              colorTwo={colorTwo}\n            />\n          </div>\n          <Scroll>\n            <ErrorBoundary>\n              <Routes>\n                <Route path=\"/My-Cats\" element={<CardList cats={filteredCats} />} />\n                <Route path=\"/My-Cats/:id\" element={<CatPage cats={cats} />} />\n              </Routes>\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'tachyons';\n\nconst myCats = document.getElementById('root');\nReactDOM.render(<App />, myCats)\nsetInterval(() => {\n    ReactDOM.render(<App />, myCats);\n}, 60000);\n\n// registerServiceWorker();\n"],"sourceRoot":""}