{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Background.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","width","height","CardList","cats","map","user","i","s","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","Background","clickChange","colorOneChange","colorTwoChange","colorOne","colorTwo","value","onClick","ErrorBoundry","setState","hasError","error","info","this","Component","App","makeBackgroundChange","css","document","querySelector","getElementById","background","state","textContent","onColorOneChange","event","target","onColorTwoChange","onClickChange","letters","color3","color4","Math","floor","random","onSearchChange","searchfield","fetch","then","response","json","users","filteredCats","filter","cat","toLowerCase","includes","length","Date","toLocaleTimeString","myCats","ReactDOM","render","setInterval"],"mappings":"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","file":"static/js/main.08095a8b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card({ name, email, id }) {\n  return (\n    <div className='tc grow bg-light-yellow br3 pa3 ma2 dib bw2 shadow-5' >\n      <img alt='robots' src={`https://robohash.org/${id}?set=set4`} width='200' height='200' />\n      <div>\n        <h3 className='gray'>{name}</h3>\n        <p className='gray underline'>{email}</p>\n      </div>\n    </div >\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({ cats }) {\n  return (\n    <div>\n      {\n        cats.map((user, i) => {\n          /*           if (true) {\n                      throw new Error('CardList is not working!!');\n                    } */\n          return (\n            <Card\n              key={i}\n              id={cats[i].id} s\n              name={cats[i].name}\n              email={cats[i].email}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nfunction SearchBox({ searchChange }) {\n  return (\n    <div>\n      <input\n        className='pa2 br3 ba b--yellow'\n        type='search'\n        placeholder='Find Cats'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nfunction Scroll(props) {\n  return (\n    <div style={{ overflowY: 'scroll', border: '0px solid white', height: '800px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","\nfunction Background({ clickChange, colorOneChange, colorTwoChange, colorOne, colorTwo }) {\n    return (\n        <div >\n            <input\n                className=\"color1 br3 b--white\"\n                type=\"color\"\n                value={colorOne}\n                onChange={colorOneChange} />\n            <input\n                className='button1 pt1 br3 ba b--white purple'\n                type='button'\n                value=\"Random Background\"\n                onClick={clickChange} />\n            <input\n                className=\"color2 br3 b--white\"\n                type=\"color\"\n                value={colorTwo}\n                onChange={colorTwoChange} />\n            <h3 className=\"white f6\"></h3>\n        </div>\n    )\n};\nexport default Background;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.setState = {\n            hasError: false\n        }\n    }\n\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n\n    render() {\n        if (this.setState.hasError) {\n            return <h1>Oooops. something went wrong</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport Background from '../components/Background';\nimport ErrorBoundary from '../components/ErrorBoundry';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      cats: [],\n      searchfield: '',\n      colorOne: '#f6f948',\n      colorTwo: '#be47f5',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => { this.setState({ cats: users }) });\n  }\n\n  makeBackgroundChange = () => {\n    const css = document.querySelector(\"h3\");\n    const body = document.getElementById(\"root\");\n    body.style.background = \"linear-gradient(to right, \" + this.state.colorOne + \", \" + this.state.colorTwo + \")\";\n    css.textContent = this.state.colorOne + \" 👈🏻 ColorCode 👉🏻 \" + this.state.colorTwo;\n  }\n\n  onColorOneChange = (event) => {\n    this.setState({ colorOne: event.target.value })\n    document.querySelector(\".color2\").style.background = this.state.colorOne;\n    this.makeBackgroundChange();\n  }\n\n  onColorTwoChange = (event) => {\n    this.setState({ colorTwo: event.target.value })\n    document.querySelector(\".color1\").style.background = this.state.colorTwo;\n    this.makeBackgroundChange();\n  }\n\n  onClickChange = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color3 = \"#\";\n    let color4 = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color3 += letters[Math.floor(Math.random() * 16)];\n      color4 += letters[Math.floor(Math.random() * 16)];\n    }\n\n    this.setState({ colorOne: color3 });\n    this.setState({ colorTwo: color4 });\n    document.querySelector(\".color1\").style.background = color4;\n    document.querySelector(\".color2\").style.background = color3;\n    this.makeBackgroundChange();\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render() {\n    const { cats, searchfield } = this.state;\n    const filteredCats = cats.filter(cat =>\n      cat.name.toLowerCase().includes(searchfield.toLowerCase())\n    )\n\n    document.getElementById(\"root\").style.background = \"linear-gradient(to right, \" + this.state.colorOne + \", \" + this.state.colorTwo + \")\";\n\n    return !cats.length ?\n      <p>..</p> :\n      (\n        <div className='tc'>\n          <h2 className='white f4'>{new Date().toLocaleTimeString()} </h2>\n          <h1 className='f1 white'>MY CATS</h1>\n          <Background\n            clickChange={this.onClickChange}\n            colorOneChange={this.onColorOneChange}\n            colorTwoChange={this.onColorTwoChange}\n            colorOne={this.state.colorOne}\n            colorTwo={this.state.colorTwo}\n          />\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList cats={filteredCats} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'tachyons';\n\nconst myCats = document.getElementById('root');\nReactDOM.render(<App />, myCats)\nsetInterval(() => {\n    ReactDOM.render(<App />, myCats);\n}, 1000);\n\n// registerServiceWorker();\n"],"sourceRoot":""}